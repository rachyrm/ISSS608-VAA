[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Your Page Title\n\n\n\n\nH E L L O ;\n\n\nI am Rachel Yee. Data Analyst and Visualization Specialist."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my Visual Analytics Portfolio. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring the fundamental principles and key components of ggplot2, gaining experience in creating statistical graphics using the Layered Grammar of Graphics. By the end, I’ll be adept at employing ggplot2’s graphical elements to produce elegant and functional statistical visuals."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#importing-the-data",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Importing the data",
    "text": "Importing the data\nThe provided code utilizes the read_csv() function from the readr package within the tidyverse to import the “exam_data.csv” file into the R environment.\nThis dataset comprises examination scores of 3rd grade students. It encompasses seven categorical and continuous attributes, with ID, CLASS, GENDER, and RACE being categorical, while MATHS, ENGLISH, and SCIENCE are continuous.\nThis dataset offers insights into the academic performance of students, allowing for the exploration of patterns and relationships between various attributes.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\nNote:\n\nWithout ‘show_col_types = FALSE’, the message below will be shown"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#installing-and-importing-r-packages",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#installing-and-importing-r-packages",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Installing and importing R packages",
    "text": "Installing and importing R packages\nBefore diving into the code below, it is crucial to ensure that the necessary R packages are installed. The code chunk below utilizes the ‘p_load()’ function from the pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be imported into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "R Graphics VS ggplot",
    "text": "R Graphics VS ggplot\nI will be comparing how R Graphics, the core graphical functions of Base R and ggplot can create a simple histogram.\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nWhile R Graphics may simplify the code, ggplot2 is recommended for its flexibility, clarity, and efficiency in creating sophisticated graphics. With a layered approach and intuitive syntax based on The Grammar of Graphics, ggplot2 allows for easier customization and a more concise way to build visuals, making it a preferred choice for efficient data visualization in R.\nAs mentioned by Hadley Wickham, “The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualization, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.”"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. The seven grammars of ggplot2 are shown in the figure below.\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colors, size, shape, or transparency.\nGeometries: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarizes data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\nIn a dot plot, the dot’s width corresponds to the bin width (or maximum width, depending on the binning algorithm), and the dots are stacked, with each dot symbolizing a single observation.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nNote:\n\nThe y scale is not very useful, in fact it is very misleading.\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe below code is to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote:\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")\n\n\n\n\nNotes:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline color of the bars in black"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\nNote:\n\nThis approach can be used to color, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\nThe geom-density() function calculates and displays a kernel density estimate, offering a smoothed version of a histogram. This method serves as a valuable alternative to histograms, particularly for continuous data originating from a smooth underlying distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\nThe geom_boxplot() function presents a visual representation of a continuous value list. It depicts five summary statistics, including the median, two hinges, and two whiskers, while also showing individual “outlying” points separately.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches in box plots aid in visually assessing potential differences in distribution medians. If the notches do not overlap, it indicates evidence of differing medians.\nThe following code segment generates a notched plot instead of a box plot, illustrating the distribution of Math scores based on gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\nThe geom_violin function is specifically crafted for constructing violin plots, a method used to compare multiple data distributions. Traditional density curves face challenges when comparing numerous distributions, as their lines visually overlap. Violin plots address this issue by arranging several distributions side by side, facilitating easier comparison.\nThe provided code illustrates the creation of a violin plot depicting the distribution of Math scores categorized by gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot?",
    "text": "Adding a best fit curve on a scatterplot?\nThe relationship of Maths and English grades of pupils are shown in the scatterplot below. A best fit curve can be added to improve the interpretability of this graph.\n\nWe can use geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nNote:\n\nThe default method used is loss.\n\nThe default smoothing method can be overridden with the code below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\nfacet_wrap organizes a one-dimensional sequence of panels into a two-dimensional layout, which is often more efficient in utilizing screen space compared to facet_grid. This is particularly advantageous as most displays have a roughly rectangular shape. The provided code segment generates a trellis plot using facet_wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\nfacet_grid() constructs a matrix of panels based on row and column faceting variables. This is particularly beneficial when dealing with two discrete variables, and all possible combinations of these variables are present in the dataset. The following code segment generates a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\ncoord_flip() flips the horizontal bar chart into vertical bar chart.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-theme",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-theme",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\ntheme_gray():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\ntheme_classic():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\ntheme_minimal():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#loading-r-packages",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-Class_Ex/In-Class_Ex_01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this chapter, I will delve into various ggplot2 extensions, including the tools to craft more sophisticated and impactful statistical graphics. The goals of this exercise is to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-importing-r-packages",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-importing-r-packages",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Installing and importing R packages",
    "text": "Installing and importing R packages\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\n\n\n\n\n\n\nggrepel\nprovides geoms for ggplot2 to repel overlapping text labels.\n\n\nggthemes\nprovides some extra themes, geoms, and scales for ‘ggplot2’.\n\n\nhrbrthemes\nprovides typography-centric themes and theme components for ggplot2.\n\n\npatchwork\nfor preparing composite figure created using ggplot2.\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Importing the data",
    "text": "Importing the data\nIn this exercise, I will work with a file named Exam_data. This file contains the year-end examination grades of a group of primary 3 students from a local school, and it’s saved in a format called CSV. To bring this data into R, we use a piece of code. This code uses a function called read_csv() from a package called readr, which is part of a collection of packages known as tidyverse.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThere are a total of seven attributes in the exam_data tibble data frame.\n\n\n\nCategorical Attributes\n\n\n\n\nID\n\n\nCLASS\n\n\nGENDER\n\n\nRACE\n\n\n\n\n\n\nContinuous Attributes\n\n\n\n\nMATHS\n\n\nENGLISH\n\n\nSCIENCE"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Beyond ggplot2 Annotation: ggrepel",
    "text": "Beyond ggplot2 Annotation: ggrepel\n\nThe plotThe code\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Using ggrepel",
    "text": "Using ggrepel\nBy replacing the following:\n\ngeom_text() with geom_text_repel(), and\ngeom_label() with geom_label_repel(),\n\nvisualization is clearer.\n\nThe plotThe code\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  }
]