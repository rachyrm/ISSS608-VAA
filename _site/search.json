[
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "In this hands-on exercise, I will be exploring the fundamental principles and key components of ggplot2, gaining experience in creating statistical graphics using the Layered Grammar of Graphics. By the end, I’ll be adept at employing ggplot2’s graphical elements to produce elegant and functional statistical visuals."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#installing-and-importing-r-packages",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#installing-and-importing-r-packages",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Installing and importing R packages",
    "text": "Installing and importing R packages\nBefore diving into the code below, it is crucial to ensure that the necessary R packages are installed. The code chunk below utilizes the ‘p_load()’ function from the pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be imported into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#importing-the-data",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Importing the data",
    "text": "Importing the data\nThe provided code utilizes the read_csv() function from the readr package within the tidyverse to import the “exam_data.csv” file into the R environment.\nThis dataset comprises examination scores of 3rd grade students. It encompasses seven categorical and continuous attributes, with ID, CLASS, GENDER, and RACE being categorical, while MATHS, ENGLISH, and SCIENCE are continuous.\nThis dataset offers insights into the academic performance of students, allowing for the exploration of patterns and relationships between various attributes.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\nNote:\n\nWithout ‘show_col_types = FALSE’, the message below will be shown"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "R Graphics VS ggplot",
    "text": "R Graphics VS ggplot\nI will be comparing how R Graphics, the core graphical functions of Base R and ggplot can create a simple histogram.\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nWhile R Graphics may simplify the code, ggplot2 is recommended for its flexibility, clarity, and efficiency in creating sophisticated graphics. With a layered approach and intuitive syntax based on The Grammar of Graphics, ggplot2 allows for easier customization and a more concise way to build visuals, making it a preferred choice for efficient data visualization in R.\nAs mentioned by Hadley Wickham, “The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualization, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.”"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. The seven grammars of ggplot2 are shown in the figure below.\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colors, size, shape, or transparency.\nGeometries: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarizes data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\nIn a dot plot, the dot’s width corresponds to the bin width (or maximum width, depending on the binning algorithm), and the dots are stacked, with each dot symbolizing a single observation.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nNote:\n\nThe y scale is not very useful, in fact it is very misleading.\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\nThe below code is to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote:\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")\n\n\n\n\nNotes:\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline color of the bars in black"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\nNote:\n\nThis approach can be used to color, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\nThe geom-density() function calculates and displays a kernel density estimate, offering a smoothed version of a histogram. This method serves as a valuable alternative to histograms, particularly for continuous data originating from a smooth underlying distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\nThe geom_boxplot() function presents a visual representation of a continuous value list. It depicts five summary statistics, including the median, two hinges, and two whiskers, while also showing individual “outlying” points separately.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches in box plots aid in visually assessing potential differences in distribution medians. If the notches do not overlap, it indicates evidence of differing medians.\nThe following code segment generates a notched plot instead of a box plot, illustrating the distribution of Math scores based on gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\nThe geom_violin function is specifically crafted for constructing violin plots, a method used to compare multiple data distributions. Traditional density curves face challenges when comparing numerous distributions, as their lines visually overlap. Violin plots address this issue by arranging several distributions side by side, facilitating easier comparison.\nThe provided code illustrates the creation of a violin plot depicting the distribution of Math scores categorized by gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot?",
    "text": "Adding a best fit curve on a scatterplot?\nThe relationship of Maths and English grades of pupils are shown in the scatterplot below. A best fit curve can be added to improve the interpretability of this graph.\n\nWe can use geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nNote:\n\nThe default method used is loss.\n\nThe default smoothing method can be overridden with the code below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\nfacet_wrap organizes a one-dimensional sequence of panels into a two-dimensional layout, which is often more efficient in utilizing screen space compared to facet_grid. This is particularly advantageous as most displays have a roughly rectangular shape. The provided code segment generates a trellis plot using facet_wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\nfacet_grid() constructs a matrix of panels based on row and column faceting variables. This is particularly beneficial when dealing with two discrete variables, and all possible combinations of these variables are present in the dataset. The following code segment generates a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\ncoord_flip() flips the horizontal bar chart into vertical bar chart.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-theme",
    "href": "Hands-On_Ex/Hands-on_Ex01/Hands-On_Ex01.html#working-with-theme",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\ntheme_gray():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\ntheme_classic():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\ntheme_minimal():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this chapter, I will delve into various ggplot2 extensions, including the tools to craft more sophisticated and impactful statistical graphics. The goals of this exercise is to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-importing-r-packages",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-importing-r-packages",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Installing and importing R packages",
    "text": "Installing and importing R packages\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\n\n\n\n\n\n\nggrepel\nprovides geoms for ggplot2 to repel overlapping text labels.\n\n\nggthemes\nprovides some extra themes, geoms, and scales for ‘ggplot2’.\n\n\nhrbrthemes\nprovides typography-centric themes and theme components for ggplot2.\n\n\npatchwork\nfor preparing composite figure created using ggplot2.\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Importing the data",
    "text": "Importing the data\nIn this exercise, I will work with a file named Exam_data. This file contains the year-end examination grades of a group of primary 3 students from a local school, and it’s saved in a format called CSV. To bring this data into R, we use a piece of code. This code uses a function called read_csv() from a package called readr, which is part of a collection of packages known as tidyverse.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThere are a total of seven attributes in the exam_data tibble data frame.\n\n\n\nCategorical Attributes\n\n\n\n\nID\n\n\nCLASS\n\n\nGENDER\n\n\nRACE\n\n\n\n\n\n\nContinuous Attributes\n\n\n\n\nMATHS\n\n\nENGLISH\n\n\nSCIENCE"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Using ggrepel",
    "text": "Using ggrepel\nBy replacing the following:\n\ngeom_text() with geom_text_repel(), and\ngeom_label() with geom_label_repel(),\n\nvisualization is clearer.\n\nThe PlotThe Code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Working with ggtheme package",
    "text": "Working with ggtheme package\nggthemes provide ’ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, 'Stata', 'Excel', and The Wall Street Journal, among others.\nIn the example below, The Economist theme is used. It also provides some extra geoms and scales for 'ggplot2'. Consult this vignette to learn more.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Working with hrbthems package",
    "text": "Working with hrbthems package\nThe hrbrthemes package offers a foundational design for graphics that pays attention to text-related elements, like where labels are positioned and the choice of fonts. In simpler terms, it provides a style template for your plots with a focus on how text looks and where it is located on the graph.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second objective is all about making work more efficient in a production workflow. Essentially, the context for using the elements of hrbrthemes is within this workflow, where you’re creating and producing things. In the next code chunk, the following will be done:\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines.\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating Composite Graphics: pathwork methods",
    "text": "Creating Composite Graphics: pathwork methods\nSeveral functions in ggplot2 extensions help prepare composite figures by combining multiple graphs. Examples include `grid.arrange()` in the gridExtra package and `plot_grid()` in the cowplot package. In this section, an introduction to a ggplot2 extension called patchwork, specifically designed for merging separate ggplot2 graphs into a single figure, will be shown.\nThe patchwork package has a straightforward syntax for creating layouts, which can easily make:\n\nA two-column layout using the plus sign `+`.\nSubplot groups using parentheses `()`.\nA two-row layout using the division sign `/`."
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Combining two ggplot2 graphs",
    "text": "Combining two ggplot2 graphs\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\np1 + p2"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Combining three ggplot2 graphs",
    "text": "Combining three ggplot2 graphs\nMore complex composite figures can be created by using suitable operators. For instance, the composite figure below is plotted using the following operators:\n- The “|” operator to stack two ggplot2 graphs.\n- The “/” operator to place the plots beside each other.\n- The “()” operator to define the sequence of the plotting.\nThis link provides more information.\n\nThe PlotThe Code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nThe PlotThe Code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, one or several plots or graphic elements can be placed freely on top or below another plot.\n\nThe PlotThe Code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-On_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\nThe figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\nThe PlotThe Code\n\n\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In Class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) Furthermore, several Singapore’s Minister for Education also started an “every school a good school” slogan. The general public, however, strongly belief that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Loading R packages",
    "text": "Loading R packages\n\npacman::p_load(tidyverse, haven, ggrepel, patchwork, ggthemes, hrbrthemes)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#the-data",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "The Data",
    "text": "The Data\nThere are a total of 5 data sets provided in the PISA 2022 data set. However, only the student questionnaire data file will be used for this assignment. Besides the data files, there is a collection of complementary materials such as questionnaires, codebooks, compendia and the rescaled indices for trend analyses in this page too. PISA 2022 Technical Report provides more information about the PISA 2022 survey."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-pisa-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-pisa-data",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%   \n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,           \n          \"data/stu_qqq_SG.rds\")\n\nBy executing the provided code below, data is filtered to include only instances where the country code corresponds to Singapore.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#choosing-relevant-variables",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#choosing-relevant-variables",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Choosing relevant variables",
    "text": "Choosing relevant variables\nFirst, only relevant variables useful for the study will be included. This is important for precision, resource efficiency, and valid results. It ensures alignment with the research. The variables that will be used include:\n\n\n\nVariable Code\nVariable Name\n\n\n\n\nCNTSCHID\nSchool_ID\n\n\nCNTSTUID\nStudent_ID\n\n\nST004D01T\nGender\n\n\nPV1MATH\nMath_Score\n\n\nPV1READ\nReading_Score\n\n\nPV1SCIE\nScience_Score\n\n\nESCS\nSocioeconomic_Stat\n\n\nST251Q07JA\nArtwork\n\n\n\nThe code chunk below filters these variables.\n\nstu_qqq_eda &lt;- stu_qqq_SG %&gt;%\n  select(CNTSCHID,CNTSTUID,ST004D01T, PV1MATH, PV1READ, PV1SCIE, ST250Q01JA, ST250Q03JA, ST251Q07JA, ESCS)%&gt;%\n  rename(c(Gender=\"ST004D01T\", \n           School_ID=\"CNTSCHID\", \n           Student_ID=\"CNTSTUID\",\n           Math_Score=\"PV1MATH\",\n           Reading_Score=\"PV1READ\",\n           Science_Score=\"PV1SCIE\",\n           Own_Room=\"ST250Q01JA\",\n           Edu_App=\"ST250Q03JA\",\n           Artwork=\"ST251Q07JA\",\n           Socioeconomic_Stat=\"ESCS\"))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#changing-data-types",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#changing-data-types",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Changing Data Types",
    "text": "Changing Data Types\nNext, the below code chunk converts variables to factors. This is done when dealing with categorical or nominal data. Factors are useful for representing categorical variables in statistical analyses, as they allow for better handling.\n\nstu_qqq_eda$School_ID = as.factor(stu_qqq_eda$School_ID)\nstu_qqq_eda$Gender = as.factor(stu_qqq_eda$Gender)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#recode-variables",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#recode-variables",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Recode Variables",
    "text": "Recode Variables\nRecoding variables is necessary to make it more useful and comprehensible. This helps with analysis as it improves research quality. For instance, the code chunks provided below recodes each variable into new values. Lets take gender as an example, since the data provides us with values of 1 and 2 as indications for female and male, it is hard to understand what this means without the actual questionnaire or raw data. Thus, it is our job to make it easier to understand for readers.\n\nGenderArtworkSocioeconomic Status\n\n\n\nstu_qqq_eda &lt;- stu_qqq_eda %&gt;%\n  mutate(Gender=(recode(Gender, '1'=\"Female\", '2'=\"Male\")))\n\n\n\n\nstu_qqq_eda$Artwork &lt;- factor(stu_qqq_eda$Artwork,\n                               levels = c(1,2,3,4),\n                               labels = c(\"None\",\"One\",\"Two\",\"Three+\"))\nstu_data_artwork &lt;- stu_qqq_eda[!is.na(stu_qqq_eda$Artwork), ]\n\n\n\n\nstu_qqq_socio &lt;- stu_qqq_eda %&gt;%\n  select(Math_Score, Science_Score, Reading_Score, Socioeconomic_Stat) %&gt;%\n  drop_na()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#academic-performance",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#academic-performance",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Academic Performance",
    "text": "Academic Performance\nThis analysis aims to provide a thorough examination of students’ academic performance, offering insights into the distribution across different subjects. To achieve this, a histogram is created for each subject, visually displaying the distribution of scores. Within each histogram, the mean and median values are highlighted, providing a clear representation of the central tendency of the data.\n\nMathematicsReadingScience\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Math_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x = \"Math Scores\",\n       y =\"Number of Students\",\n       title= \"Distribution of Student Math Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Math_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=675, \n           y=60, \n          label= paste(\"Median =\", round(median(stu_qqq_eda$Math_Score, na.rm = T), 3)), \n           color= \"white\", \n           size=4,\n           ) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Math_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=495,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Math_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Reading_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Reading Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Reading Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Reading_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=650, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Reading_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Reading_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=460,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Reading_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nShow code\nggplot(data=stu_qqq_eda, \n       aes(x=Science_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Science Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Science Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Science_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=659, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Science_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Science_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=480,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Science_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#student-performances-variations-within-schools",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#student-performances-variations-within-schools",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Student Performances Variations Within Schools",
    "text": "Student Performances Variations Within Schools\nThis analysis delves into the variations in student performances within schools in Singapore, showing the diversity of academic achievements within educational institutions. The below code chunk begins by grouping the data based on the unique school IDs. Then, it calculates the average scores for each subject, creating new variables. Only distinct combinations of school IDs and their corresponding average scores for each subject are included.\n\nstu_sch &lt;- stu_qqq_eda %&gt;%\n  group_by(School_ID) %&gt;%\n  mutate(math_avg = mean(Math_Score),\n         science_avg = mean(Science_Score),\n         reading_avg = mean(Reading_Score)) %&gt;%\n  select(School_ID, math_avg, science_avg, reading_avg) %&gt;%\n  unique() \n\nBelow shows the histograms of the different average scores for each subject across different schools. The histogram is customized with 30 bins, with a customized color scheme, and median labels and values. This provides a comprehensive view of how average scores vary within schools for each subject.\n\nMathematicsReadingScience\n\n\n\n\nShow code\nsch_math &lt;- ggplot(data = stu_sch,\n       aes(x = math_avg)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#ADD0B3\") +\n  geom_vline(\n    aes(xintercept = median(math_avg)),\n    colour=\"black\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 25,\n    label = paste(\"Median =\", round(median(stu_sch$math_avg), 3)), \n    color = \"black\"\n  ) +\n  ylim(0, 30) +\n  xlim(300,900) +\n  labs(x = \"Average Scores\", y = \"Count\", title = \"Mathematics\")\nsch_math\n\n\n\n\n\n\n\n\n\nShow code\nsch_read &lt;- ggplot(data = stu_sch,\n       aes(x = reading_avg)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#ADD0B3\") +\n  geom_vline(\n    aes(xintercept = median(reading_avg)),\n    colour=\"black\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 25,\n    label = paste(\"Median =\", round(median(stu_sch$reading_avg), 3)), \n    color = \"black\"\n  ) +\n    ylim(0, 35) +\n    xlim(300,900) +\n  labs(x = \"Average Scores\", y = \"Count\", title = \"Reading\")\nsch_read\n\n\n\n\n\n\n\n\n\nShow code\nsch_sci &lt;- ggplot(data = stu_sch,\n       aes(x = science_avg)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#ADD0B3\") +\n  geom_vline(\n    aes(xintercept = median(science_avg)),\n    colour=\"black\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 25,\n    label = paste(\"Median =\", round(median(stu_sch$science_avg), 3)), \n    color = \"black\"\n  ) +\n    ylim(0, 35) +\n    xlim(300,900) +\n  labs(x = \"Average Scores\", y = \"Count\", title = \"Science\")\nsch_sci\n\n\n\n\n\n\n\n\nTo further compare and contrast these distributions, side-by-side box plots are generated. These visualizations offer a better understanding of the performance patterns in different academic subjects across various educational institutions.\n\n\nShow code\nsch_math &lt;- ggplot(data=stu_sch,\n       aes(y = math_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",\n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Math Average\", title = \"\")\n\nsch_read &lt;- ggplot(data=stu_sch,\n       aes(y = reading_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\", \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Reading Average\", title = \"\")\n\nsch_sci &lt;- ggplot(data=stu_sch,\n       aes(y = science_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",  \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1)) +\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Science Average\", title = \"\")\n\nsch_math + sch_read + sch_sci\n\n\n\n\n\nThe results above reveal that there are no substantial differences in average scores across the three subjects. However, the presence of outliers indicates instances of both exceptional and underperformance within certain schools for each respective subject. These outliers are important data points that highlight differences in academic performance among various schools. They show variations in how well or poorly schools perform in different subjects."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#differences-in-student-performance-among-genders",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#differences-in-student-performance-among-genders",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Differences in Student Performance Among Genders",
    "text": "Differences in Student Performance Among Genders\nSimilar to the previous analysis, this one explores variations in academic performance between male and female students, aiming to identify any notable differences in their scores across different subjects.\n\n\nShow code\ngender_math &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Math_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", y = \"Score\", title = \"Mathematics\", axis.title.y = element_blank())\n\ngender_read &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Reading_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Reading\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_sci &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Science_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Science\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_math + gender_read + gender_sci\n\n\n\n\n\nThe boxplots reveal several insights into the performance of male and female students across different subjects. Notably, female students exhibit stronger performance in Reading, while male students demonstrate higher scores in Mathematics and Science. Despite these differences, the means and medians for each subject appear to be similar between both genders. Additionally, there is a noticeable presence of outliers, especially towards the lower scores, which indicates below-average performances."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#socioeconomic-status",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#socioeconomic-status",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Socioeconomic Status",
    "text": "Socioeconomic Status\nNow, we will dive into the relationship between socioeconomic status and students performances. There are numerous variables in the dataset that can be used to be indicators of socioeconomic status, however this study will only be focused on the three:\n\nResidential Assests - whether or not a personal room is owned\nEducational Apps - whether or not extra investment is made for educational purposes\nArtworks - how many works of arts (ex: paintings, sculptures, etc) present in the household\n\n\nResidential Assets\nIn this part, socioeconomic status will be assessed by examining whether individuals in Singapore have a personal room. In the context of limited living conditions, having one’s own room is considered a luxury, making it a significant indicator of economic well-being.\n\nMathematicsReadingScience\n\n\n\n\nShow code\nmath_room &lt;- ggplot(data = stu_data_own_room,\n       aes(x = as.factor(Own_Room),\n           y = Math_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Room Status\",\n       y = \"\",\n       title = \"Mathematics\",\n       axis.title.y = element_blank())\nmath_room\n\n\n\n\n\n\n\n\n\nShow code\nreading_room &lt;- ggplot(data = stu_data_own_room,\n       aes(x = as.factor(Own_Room),\n           y = Reading_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Room Status\",\n       y = \"\",\n       title = \"Reading\",\n       axis.title.y = element_blank())\nreading_room\n\n\n\n\n\n\n\n\n\nShow code\nscience_room &lt;- ggplot(data = stu_data_own_room,\n       aes(x = as.factor(Own_Room),\n           y = Science_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Room Status\",\n       y = \"\",\n       title = \"Science\",\n       axis.title.y = element_blank())\nscience_room\n\n\n\n\n\n\n\n\nFor a more effective comparison, the below code arranges the boxplots to be displayed side by side, providing a clearer contrast.\n\n\nShow code\nmath_room + reading_room + science_room\n\n\n\n\n\nExamining the relationship of room ownership and student performance, the analysis suggests that individuals owning their own rooms tend to have higher average scores compared to those who don’t. However, room status may not be a decisive indicator for academic scores, as the differences observed are relatively modest. It is important to note that there are substantial outliers among the dataset, indicating a diverse range of academic outcomes within this group. This suggests that while room ownership may play a role, it is not the sole determinant of performance, and other factors may contribute to the student scores.\n\n\nEducational platforms\nAccess to educational platforms can be a marker of socioeconomic welfare, reflecting an investment in learning resources. These platforms help people keep learning and gaining new skills. Having them at home does not only show a commitment to progress, but it also shows the capability of a household to put in extra, even when not needed.\n\nMathematicsReadingScience\n\n\n\n\nShow code\nmath_app &lt;- ggplot(data = stu_data_edu_app,\n       aes(x = as.factor(Edu_App),\n           y = Math_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Educational App\",\n       y = \"\",\n       title = \"Mathematics\",\n       axis.title.y = element_blank())\nmath_app\n\n\n\n\n\n\n\n\n\nShow code\nreading_app &lt;- ggplot(data = stu_data_edu_app,\n       aes(x = as.factor(Edu_App),\n           y = Reading_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Educational App\",\n       y = \"\",\n       title = \"Reading\",\n       axis.title.y = element_blank())\nreading_app\n\n\n\n\n\n\n\n\n\nShow code\nscience_app &lt;- ggplot(data = stu_data_edu_app,\n       aes(x = as.factor(Edu_App),\n           y = Science_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"Educational App\",\n       y = \"\",\n       title = \"Science\",\n       axis.title.y = element_blank())\nscience_app\n\n\n\n\n\n\n\n\n\n\nShow code\nmath_app + reading_app + science_app\n\n\n\n\n\nAnalyzing the relationship between the use of educational platforms and student performance, the findings indicate that individuals with educational platforms tend to achieve higher average scores compared to those who don’t utilize such resources. Similar to the results of room ownership, the dataset reveals significant outliers, suggesting a vairety of performances within both groups.\n\n\nArtworks\nThe presence of paintings and sculptures at home can show how well-off a family is. When individuals can afford and like art, it often means they have enough money. Families with higher incomes may choose to buy art as a way to show off or express their cultural interests. On the other hand, families with less money might prioritize spending on essential things and not buy artworks.\n\nMathematicsReadingsScience\n\n\n\n\nShow code\nmath_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Math_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Math\",\n       axis.title.y = element_blank())\nmath_artwork\n\n\n\n\n\n\n\n\n\nShow code\nreading_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Reading_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Reading\",\n       axis.title.y = element_blank())\nreading_artwork\n\n\n\n\n\n\n\n\n\nShow code\nscience_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Science_Score)) +\n  geom_boxplot(color = \"grey50\",\n               fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Science\",\n       axis.title.y = element_blank())\nscience_artwork\n\n\n\n\n\n\n\n\n\n\nShow code\npatchwork &lt;- (math_artwork / reading_artwork) | science_artwork\npatchwork\n\n\n\n\n\nBased on the results above, although there is a slightly higher average score among students who own a greater number of artworks, the variations across the data are not substantial. The observed differences in scores remain relatively similar, thus limiting the results of this analysis. for those who owns a higher number of artwork is higher, the students performance do not vary a lot with the different number of artworks owned at home."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#socioeconomic-status-1",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#socioeconomic-status-1",
    "title": "Take Home Exercise 1: Exploring Disparities in Singapore Schools",
    "section": "Socioeconomic Status",
    "text": "Socioeconomic Status\nNow, we will dive into the relationship between socioeconomic status and students performances. There are numerous variables in the dataset that can be used to be indicators of socioeconomic status, however this study will only be focused on the three:\n\nEconomic, Social and Cultural Status - holistic view of an individual or community’s position and resources\nArtworks - how many works of arts (ex: paintings, sculptures, etc) present in the household\n\n\nEconomic, Social and Cultural Status\nThe code below shows a brief summary of the dataset for socioeconomic status.\n\nsummary(stu_qqq_eda$Socioeconomic_Stat)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n-3.5488 -0.2327  0.4817  0.2904  0.9036  3.2780      47 \n\n\nSince there are results that show NA values, this is removed during data wrangling. The below code chunk shows the summary after the deletion of unnecessary data.\n\nsummary(stu_qqq_socio)\n\n   Math_Score    Science_Score   Reading_Score   Socioeconomic_Stat\n Min.   :218.6   Min.   :187.5   Min.   :135.9   Min.   :-3.5488   \n 1st Qu.:504.2   1st Qu.:496.4   1st Qu.:478.5   1st Qu.:-0.2327   \n Median :583.3   Median :569.5   Median :553.6   Median : 0.4817   \n Mean   :574.9   Mean   :561.5   Mean   :545.2   Mean   : 0.2904   \n 3rd Qu.:648.7   3rd Qu.:631.4   3rd Qu.:620.1   3rd Qu.: 0.9036   \n Max.   :943.0   Max.   :873.3   Max.   :859.5   Max.   : 3.2780   \n\n\nThe distribution of the socioeconomic standings can be seen from the histogram below.\n\n\nShow code\nggplot(data = stu_qqq_socio,\n       aes(x = Socioeconomic_Stat)) +\n  geom_histogram(color = \"grey50\", fill = \"#ADD0B3\", bins = 30) +\n  geom_vline(aes(xintercept = mean(Socioeconomic_Stat)), color = \"#137a63\", linetype = \"dashed\", size = 1) +\n  labs(x = \"Social Economic Standing\", y = \"Frequency\", title = \"Distribution of Socioeconomic Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\nShow code\ncor1 &lt;- round(cor(stu_qqq_socio$Math_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor2 &lt;- round(cor(stu_qqq_socio$Reading_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor3 &lt;- round(cor(stu_qqq_socio$Science_Score, stu_qqq_socio$Socioeconomic_Stat),2)\n\np1 &lt;- ggplot(data = stu_qqq_socio,\n             aes(y = Math_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\") +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor1), color = 'black')\n\np2 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Reading_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") + \n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor2), color = 'black')\n\np3 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Science_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor3), color = 'black')\n\np1/p2/p3\n\n\n\n\n\nThe scatter plots reveal a notable dispersion of data points across various levels of socioeconomic standing. Despite this dispersion, a consistent pattern emerges, with correlation coefficients indicating a medium positive relationship between socioeconomic status and academic performance. Specifically, the correlation coefficient of approximately 0.41~0.42 suggests that as students exhibit higher socioeconomic standing, a corresponding increase in their academic scores is observed. This highlights a noticable association between socioeconomic factors and students’ academic achievements.\n\n\nArtworks\nThe presence of paintings and sculptures at home can show how well-off a family is. When individuals can afford and like art, it often means they have enough money. Families with higher incomes may choose to buy art as a way to show off or express their cultural interests. On the other hand, families with less money might prioritize spending on essential things and not buy artworks.\n\nDistributionMathematicsReadingsScience\n\n\n\n\nShow code\nart_dist &lt;- ggplot(data = stu_data_artwork,\n       aes(x = Artwork)) +\n  geom_histogram(stat = \"count\",\n                 color = \"#137a63\",\n                 fill = \"#ADD0B3\") +\n  labs(y = \"Count\", x = \"Number of Artworks\")\nart_dist\n\n\n\n\n\n\n\n\n\nShow code\nmath_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Math_Score)) +\n  geom_violin(color = \"grey50\",\n              fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  geom_hline(yintercept = mean(stu_data_artwork$Math_Score), \n             linetype = \"dashed\",\n             color = \"black\") +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Math\",\n       axis.title.y = element_blank())\nmath_artwork\n\n\n\n\n\n\n\n\n\nShow code\nreading_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Reading_Score)) +\n  geom_violin(color = \"grey50\",\n              fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  geom_hline(yintercept = mean(stu_data_artwork$Reading_Score), \n             linetype = \"dashed\",\n             color = \"black\") +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Reading\",\n       axis.title.y = element_blank())\nreading_artwork\n\n\n\n\n\n\n\n\n\nShow code\nscience_artwork &lt;- ggplot(data = stu_data_artwork,\n       aes(x = as.factor(Artwork),\n           y = Science_Score)) +\n  geom_violin(color = \"grey50\",\n              fill = \"#ADD0B3\") +\n  geom_point(stat = \"summary\",\n             fun.y = \"mean\",\n             colour = \"#137a63\",\n             size = 3) +\n  geom_hline(yintercept = mean(stu_data_artwork$Science_Score), \n             linetype = \"dashed\",\n             color = \"black\") +\n  ylim(0, 1000) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Science\",\n       axis.title.y = element_blank())\nscience_artwork\n\n\n\n\n\n\n\n\n\n\nShow code\npatchwork &lt;- (art_dist / math_artwork) | (reading_artwork / science_artwork)\npatchwork\n\n\n\n\n\nBased on the results above, although there is a slightly higher average score among students who own a greater number of artworks, the variations across the data are not substantial. The observed differences in scores remain relatively similar, thus limiting the results of this analysis. for those who owns a higher number of artwork is higher, the students performance do not vary a lot with the different number of artworks owned at home."
  }
]